#
#
# Fedora System Setup
#
#

#
# Installation
#

Automatic installation with liveinst & default partitioning scheme
 
> lsblk 

#
# Hibernation
# https://www.ctrl.blog/entry/fedora-hibernate.html
#

Make 16 GB swap available (e.g. gparted, parted, fdisk)

Add in /etc/dracut.conf.d/resume.conf:

      add_dracutmodules+=" resume "

> dracut -f 

Find out about UIDD

> blkid | grep swap | cut -d: -f1
> Alternative: gparted > right click > info

Open /etc/default/grub and ADD(!)

      GRUB_CMDLINE_LINUX="[â€¦] resume=UUID=your-swap-identifier"

> sudo grub2-mkconfig -o /boot/grub2/grub.cfg

Check /etc/systemd/sleep.conf for

      [Sleep]
      AllowHibernation=yes
      HibernateMode=shutdown

> systemctl hibernate

#
# TODO
#

#
# Touchpad toggle
# https://era86.github.io/2019/01/17/thinkpad-function-key-mapping-toggle-touchpad-ubuntu-1804.html

> systemctl status acpi.service

# If necessary...
> systemctl enable acpi.service
> systemctl start acpi.service

# Find out about key, e.g.
> acpi_listen (& press wanted key -> ibm/hotkey LEN0268:00 00000080 00001315)

> Edit|create: /etc/acpi/events/ibm-touchpad

	event=ibm/hotkey LEN0268:00 00000080 00001315
	action=/etc/acpi/ibm-touchpad.sh~

> Get $XAUTHORITY

echo $XAUTHORITY

> Create: /etc/acpi/ibm-touchpad.sh 

	# XAUTHORITY value from 'echo $XAUTHORITY'
	export XAUTHORITY="/home/steven/.Xauthority"
	export DISPLAY=":`ls -1 /tmp/.X11-unix/ | sed -e s/^X//g | head -n 1`"
	# 'Synaptics' is the name of the touchpad manufacterer for ThinkPads (as of         
	# writing)
	read TPdevice <<EOF
	< $( xinput | sed -nre '/Synaptics/s/.*id=([0-9]*).*/\1/p' )
	state=$( xinput list-props "$TPdevice" | grep "Device Enabled" | grep -o "[01]$" )

	# Check the state of the device and enable/disable accordingly
	if [ "$state" -eq '1' ];then
  	xinput --disable "$TPdevice"
	else
  	xinput --enable "$TPdevice"
	fi

# Make script writeable
> sudo chmod 777 /etc/acpi/events/ibm-touchpad
> sudo chmod 777 /etc/acpi/ibm-touchpad.sh

# Test script
. /etc/acpi/ibm-touchpad.sh

# Reboot!

# 
# Git
#

> git

#
# Oh my bash
#

> bash -c "$(wget https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh -O -)" 
> EDIT: ~/.bashrc

#
# Mouse
#

 unclutter
-----------

# Hide mouse cursor
# Note: Just install the package
# -- if not ~/.xintrc

	unclutter unclutter --timeout 2 --jitter 50 --ignore-scrolling &


#
# Latex (texlive full)
#

# Full Latex Installation (actually an overload)
# References: https://tex.stackexchange.com/questions/245982/differences-between-texlive-packages-in-linux 
# https://francopasut.github.io/operating%20systems/Texlive-Manjaro/

> Edit: ~/.profile

	export PATH="$PATH:/opt/texlive/2019/bin/x86_64-linux".

> sudo ln -s /opt/texlive/2021/bin/x86_64-linux/latexmk
> sudo ln -s /opt/texlive/2021/bin/x86_64-linux/bibtex


#
# Dotfiles (best solution seen so far)
# https://wiki.archlinux.org/index.php/Dotfiles
# https://news.ycombinator.com/item?id=11070797
# https://wiki.archlinux.org/index.php/Git#Filtering_confidential_information
#

> git init --bare ~/.dotfiles

# Store the alias in e.g. ~/.alias
	alias config='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'

> config config status.showUntrackedFiles no

# If you are using Bash and would like bash completion for this alias:
> yay -S bash-complete-alias 
> Edit ~/.bashrc. 

	if [ -f /usr/share/bash-complete-alias/complete_alias ]; then
        	. /usr/share/bash-complete-alias/complete_alias
        	alias gitconf='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
        	complete -F config _complete_alias
	else
        	echo "Steven, '/usr/shar/bash-complete-alias/complete_alias' is missing"
	fi

> source ~/.bashrc

# Now you can track changes with
> gitconf status
> gitconf add .vimrc
> gitconf commit -m "Add vimrc"
> gitconf add .config/redshift.conf
> gitconf commit -m "Add redshift config"
> gitconfig push

# Replicate your home directory on a new machine

> git clone --separate-git-dir=~/.myconf /path/to/repo ~

#
# Filtering confidential information
# https://wiki.archlinux.org/index.php/Git#Filtering_confidential_information
#

# Omit to push sensible info

> Edit: .git/config (here: dotfiles/config)
	
	some-dotfile filter=remove-pass

> Edit: .gitattributes or GIT_DIR/info/attributes/ (here: dotfiles/info/attributes)

	[filter "remove-pass"]
	clean = "sed -e 's/^password=.*/#password=TODO/'"

> Edit: .dotfiles/info/exclude 
# Add all neccessary files

#
# Fonts
#

# Firacode
#

dnf install fira-code-fonts

#
# Arc-Gtk theme
# 

pacman -S arc-gtk-theme

#
# neovim
#

> sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

